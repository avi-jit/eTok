#!/bin/bash
#SBATCH --account=jpujara_1025
#SBATCH --partition=gpu
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=4
#SBATCH --mem=32GB
#SBATCH --gres=gpu:a100:1
#SBATCH --time=48:00:00
#SBATCH --mail-user=sghaneka@usc.edu

module purge
module load gcc/11.3.0
module load python/3.9.12
module load cuda/11.6.2
module load cudnn/8.4.0.27-11.6

while getopts f: flag
do
    case "${flag}" in
        f) file_path=${OPTARG};;
    esac
done

echo "Loading config from: $file_path";

# Import evironment variables from .env file
export $(grep -v '^#'  $file_path | xargs -d '\n')

if [ -d "train" ]
then
    echo "Found python virtual environment in working directory. Skipping creation ..."
else
    echo "Python virtual environment not found. Creating virtual environment ..."
    python -m venv train
    pip install --upgrade -r requirements.txt
fi

source train/bin/activate

echo -e "=======================\nTraining using following config:\n- Dataset: '$DATASET-$LANG'\n- Base: '$BASE'\n- E2E: '$E2E'\n- Prefix: '$NUM_PREFIX'\n- Batch Size: '$BATCH_SIZE'\n- Learning Rate: '$LEARNING_RATE'\n- Epochs: '$EPOCHS'\n======================="

if [ "$E2E" = true ]
then
    python unitrain.py -dataset $DATASET -base $BASE --e2e --device $DEVICE --lang $LANG --learning_rate $LEARNING_RATE --num_prefix $NUM_PREFIX --batch_size $BATCH_SIZE --num_epochs $EPOCHS
else
    python unitrain.py -dataset $DATASET -base $BASE --no-e2e --device $DEVICE --lang $LANG --learning_rate $LEARNING_RATE --num_prefix $NUM_PREFIX --batch_size $BATCH_SIZE --num_epochs $EPOCHS
fi